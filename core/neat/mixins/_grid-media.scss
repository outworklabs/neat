@charset "UTF-8";
/// Neat supports complex changes to the grid applied by Neat's other mixins
/// within the scope of the grid-media block content. When a
/// [custom grid](#custom-grids) with a defined `media` property is passed into
/// the mixin, grid media uses the media property as the expression for the
/// media query it creates (e.x. `(min-width: 700px) and
/// (orientation: landscape)`).
///
/// Define the `media` property within your custom grid settings map and add the
/// expression the resulting media query should be scoped to. If only a number
/// (with unit) is defined, it is assumed this is a `min-with` value, aka mobile
/// first. This grid should then be passed into the mixin directly.
///
/// @group features
///
/// @name Grid media
///
/// @argument {map} $grid
///   The grid to be used within the scope of the block.
///   This grid should include the `media` property to determine the expression
///   for the media query.
///
/// @content
///   Grid media will temporarily the override the default grid with the
///   attributes of the custom grid. This change is scoped to within the mixin
///   block, and once the mixin has ended the default grid will revert to its
///   original state as defined by `$neat-grid`. This allows for different
///   gutter width and column count based on screen size or other properties.
///
/// @example scss
///   $custom-neat-grid: (
///     columns: 12,
///     gutter: 50px,
///     media: 1000px,
///   );
///
///   .element {
///     @include grid-column(3);
///
///     @include grid-media($custom-neat-grid){
///       @include grid-column(6);
///     }
///   }
///
/// @example css
///   .element {
///     width: calc(25% - 25px);
///     float: left;
///     margin-left: 20px;
///   }
///
///   @media only screen and (min-width: 1000px) {
///     .element {
///       width: calc(50% - 75px);
///       float: left;
///       margin-left: 50px;
///     }
///   }

@mixin grid-media($grid) {
  $_media: _retrieve-neat-setting($grid, media);
  $_query: _neat-parse-media($_media);

  @media #{$_query} {
    $_default-neat-grid: $neat-grid;
    $neat-grid: $grid !global;
    @content;
    $neat-grid: $_default-neat-grid !global;
  }
}
